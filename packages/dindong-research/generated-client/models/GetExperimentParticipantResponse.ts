/* tslint:disable */
/* eslint-disable */
/**
 * Survey DingDong
 * survey-dingdong API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExperimentAttendanceStatus } from './ExperimentAttendanceStatus';
import {
    ExperimentAttendanceStatusFromJSON,
    ExperimentAttendanceStatusFromJSONTyped,
    ExperimentAttendanceStatusToJSON,
} from './ExperimentAttendanceStatus';

/**
 * 
 * @export
 * @interface GetExperimentParticipantResponse
 */
export interface GetExperimentParticipantResponse {
    /**
     * Participant ID
     * @type {number}
     * @memberof GetExperimentParticipantResponse
     */
    id: number;
    /**
     * Username
     * @type {string}
     * @memberof GetExperimentParticipantResponse
     */
    username: string;
    /**
     * Reserved Date
     * @type {string}
     * @memberof GetExperimentParticipantResponse
     */
    reservedDate: string;
    /**
     * Attendance Status
     * @type {ExperimentAttendanceStatus}
     * @memberof GetExperimentParticipantResponse
     */
    attendanceStatus: ExperimentAttendanceStatus;
    /**
     * Created datetime
     * @type {Date}
     * @memberof GetExperimentParticipantResponse
     */
    createdAt: Date;
    /**
     * Updated datetime
     * @type {Date}
     * @memberof GetExperimentParticipantResponse
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the GetExperimentParticipantResponse interface.
 */
export function instanceOfGetExperimentParticipantResponse(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('username' in value)) return false;
    if (!('reservedDate' in value)) return false;
    if (!('attendanceStatus' in value)) return false;
    if (!('createdAt' in value)) return false;
    if (!('updatedAt' in value)) return false;
    return true;
}

export function GetExperimentParticipantResponseFromJSON(json: any): GetExperimentParticipantResponse {
    return GetExperimentParticipantResponseFromJSONTyped(json, false);
}

export function GetExperimentParticipantResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetExperimentParticipantResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'reservedDate': json['reserved_date'],
        'attendanceStatus': ExperimentAttendanceStatusFromJSON(json['attendance_status']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function GetExperimentParticipantResponseToJSON(value?: GetExperimentParticipantResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'username': value['username'],
        'reserved_date': value['reservedDate'],
        'attendance_status': ExperimentAttendanceStatusToJSON(value['attendanceStatus']),
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

